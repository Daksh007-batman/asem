# Generated by Django 5.2.3 on 2025-06-19 08:24

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('warehouse', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='alarms',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_alarm_History_active', models.BooleanField(default=False)),
                ('show_voltage_alarms', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='carbonEmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_carbon_emission_visible', models.BooleanField(default=False)),
                ('carbon_emission_value', models.FloatField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_visible_dg_fuel_data', models.BooleanField(default=False)),
                ('customer_dg_fuel_visible_date', models.DateTimeField(blank=True, null=True)),
                ('is_hourly_data_visible_customer', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='dg_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_dg_mains_run_time', models.BooleanField(default=False)),
                ('dg_fuel_system_installed', models.BooleanField(default=False)),
                ('partner_dg_fuel_id', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='dg_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dg_fuel_tank_capacity', models.FloatField(blank=True, null=True)),
                ('dg_fuel_minimum_level', models.FloatField(blank=True, null=True)),
                ('dg_overtime', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HomeGatewayId',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hgw_id', models.CharField(max_length=200)),
                ('rsssh_port', models.CharField(max_length=50, unique=True)),
                ('monitoring_port', models.CharField(max_length=50, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='is_saving',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_pf_visible', models.BooleanField(default=False)),
                ('is_loadGraph_visible', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='pf_threshold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r_phase_pf_threshold', models.FloatField(blank=True, null=True)),
                ('y_phase_pf_threshold', models.FloatField(blank=True, null=True)),
                ('b_phase_pf_threshold', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='phaseCurrent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r_phase_pf_threshold', models.FloatField(blank=True, default=0, null=True)),
                ('y_phase_pf_threshold', models.FloatField(blank=True, default=0, null=True)),
                ('b_phase_pf_threshold', models.FloatField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='powersource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_this_power_source', models.BooleanField(default=False)),
                ('power_source', models.PositiveIntegerField(choices=[(0, 'MAINS SUPPLY'), (1, 'DG '), (2, 'DG 1'), (3, 'DG 2'), (4, 'DG 3'), (5, 'DG 4')], default=0)),
                ('r_phase_pf_threshold', models.FloatField(default=0)),
                ('y_phase_pf_threshold', models.FloatField(default=0)),
                ('b_phase_pf_threshold', models.FloatField(default=0)),
                ('load_graph_color', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='saving',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('avg_saving', models.FloatField(blank=True, null=True)),
                ('max_saving', models.FloatField(blank=True, null=True)),
                ('min_saving', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='sensors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('on_sensor_power', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('is_visible', models.BooleanField(default=True)),
                ('visible_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='site_data',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('live_date', models.DateTimeField()),
                ('baseline_date', models.DateTimeField()),
                ('current_baseline', models.FloatField()),
                ('consumed_energy', models.FloatField()),
                ('total_energy_saved', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='site_manager_info',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_manager', models.CharField(max_length=50)),
                ('site_manager_contact', models.CharField(max_length=50)),
                ('site_manager_email', models.EmailField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Threshold_value',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('max_threshold_value', models.FloatField(blank=True, null=True)),
                ('min_threshold_value', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='VoltageThreshold',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('r_phase_voltage_threshold_max', models.FloatField(blank=True, null=True)),
                ('y_phase_voltage_threshold_max', models.FloatField(blank=True, null=True)),
                ('b_phase_voltage_threshold_max', models.FloatField(blank=True, null=True)),
                ('r_phase_voltage_threshold_min', models.FloatField(blank=True, null=True)),
                ('y_phase_voltage_threshold_min', models.FloatField(blank=True, null=True)),
                ('b_phase_voltage_threshold_min', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='aisle_blocks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_no_of_blocks', models.PositiveIntegerField()),
                ('total_no_of_aisles', models.PositiveIntegerField()),
                ('location', models.CharField(max_length=250)),
                ('site_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.site')),
            ],
        ),
        migrations.CreateModel(
            name='AisleGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attached_leg_id', models.CharField(max_length=30)),
                ('aisleGroupName', models.CharField(max_length=100)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.site')),
            ],
        ),
        migrations.CreateModel(
            name='consumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expected_consumption', models.FloatField(blank=True, null=True)),
                ('cumulative_consumption', models.FloatField(default=0)),
                ('AisleGroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.aislegroup')),
            ],
        ),
        migrations.CreateModel(
            name='lights',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_lights', models.CharField(max_length=10)),
                ('one_light_watt', models.CharField(max_length=30)),
                ('aisle_blocks', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.aisle_blocks')),
            ],
        ),
        migrations.CreateModel(
            name='metersInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('per_unit_cost', models.FloatField()),
                ('genset_unit_rate', models.FloatField()),
                ('no_of_single_source_meters', models.PositiveIntegerField()),
                ('no_of_dual_source_meters', models.PositiveIntegerField()),
                ('is_active', models.BooleanField()),
                ('is_visible', models.BooleanField()),
                ('is_live', models.BooleanField(default=False)),
                ('SITE_TYPE', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.site')),
            ],
        ),
    ]
